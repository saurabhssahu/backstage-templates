variables:
  DOCKER_REPOSITORY: $ECR_REGISTRY_EPD
  DOCKER_IMAGE_NAME: dob-app-darp
  DOCKER_IMAGE_TAG: "10.0.1"
  DOCKER_IMAGE: $DOCKER_REPOSITORY/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
  DEFAULT_GITLAB_RUNNER_TAGS: dob-default
  DOCKER_LOGIN_ENV: "docker-login-env"
  DOCKER_HOST: "tcp://172.17.0.2:2375"
  DOCKER_TLS_CERTDIR: ""


include:
  - project: 'dnb/tools/ci_templates'
    ref: main
    file: '/ecr_login.yml'

stages:
  - build
  - deploy

build:
  stage: build
  image: $ECR_REGISTRY_EPD/tools-docker-cli:latest
  services:
    - $ECR_REGISTRY_EPD/tools-docker-dind:latest
  script:
    - !reference [ .ecr_login, script ]
    - docker build -t ${DOCKER_REPOSITORY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .
    - docker push ${DOCKER_REPOSITORY}/${DOCKER_IMAGE_NAME}:$DOCKER_IMAGE_TAG
  tags:
    - $DEFAULT_GITLAB_RUNNER_TAGS
    
deploy:
  stage: deploy
  image: $ECR_REGISTRY_EPD/tools-builder:latest
  script:
    - curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    - install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
    - rm argocd-linux-amd64
    - argocd login a06cbe567177043679df53cfa114e081-1515043873.eu-west-1.elb.amazonaws.com --username admin --password $ARGOCD_TOKEN --insecure
    - argocd repo add https://gitlab.tech.dnb.no/$CI_PROJECT_PATH.git --username Dilraj.Madhava --password $GITLAB_TOKEN
    - argocd app create $CI_PROJECT_NAME --repo https://gitlab.tech.dnb.no/$CI_PROJECT_PATH.git --path app --dest-namespace default --dest-server https://kubernetes.default.svc --directory-recurse --sync-policy automated
  tags:
    - $DEFAULT_GITLAB_RUNNER_TAGS